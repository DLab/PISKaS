make[1]: entrant dans le répertoire « /crypted/Gits/KaSim/models/cflows/side-effects2 »
Parsing side-effects.ka...
done
+ Compiling...
	 -simulation parameters
	 -agent signatures
	 -variable declarations
	 -initial conditions
	 -rules
	 -observables
	 -perturbations
	 Done
+ Analyzing non local patterns...
+ Building initial simulation state...
	 -Counting initial local patterns...
	 Done

WARNING: No data points are required, use -p option for plotting data.
WARNING:  breaking a semi-link on site 'a' will induce a side effect
____________________________________________________________
############################################################
+ Producing causal compressions
	 - blackboard generation
		 * refining events
INIT: Agent 0_0
 Create(A_0[3,2,1])
 Free(A_0.3)
 Free(A_0.2)
 Bind(A_0.1,B_1.1)

INIT: Agent 1_1
 Create(B_1[3,2,1])
 Free(B_1.3)
 Free(B_1.2)
 Bind(B_1.1,A_0.1)

INIT: Agent 2_2
 Create(C_2[3,2,1~1])
 Free(C_2.3)
 Free(C_2.2)
 Bind(C_2.1,C_3.1)

INIT: Agent 2_3
 Create(C_3[3,2,1~0])
 Free(C_3.3)
 Free(C_3.2)
 Bind(C_3.1,C_2.1)

***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_4[1,2,3])
 Create(B_5[1,2,3])
 Bind(B_5.1,A_4.1)
***
***Refined event:***
* Kappa_rule 
****Rule 'C(a!_)->C(a)' [C(a!_)->C(a)]****#0.0=0
#0.1=3
Apply C(a!_)->C(a)
FREE* #0.1
if pattern 3 is matched 
Modif sites: [0->{(1,1)}]
agent #0 might have side effect disconnection on sites {1}

Story encoding: 
 Is_Here(C_3)
 Is_Bound(C_3.1)
 Free(C_3.1)
 Side_effects(C_3.1:!_)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_6[1~0,2,3])
 Mod(C_6.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_7[1,2,3])
 Create(B_8[1,2,3])
 Bind(B_8.1,A_7.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_9[1,2,3])
 Create(B_10[1,2,3])
 Bind(B_10.1,A_9.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_11[1,2,3])
 Create(B_12[1,2,3])
 Bind(B_12.1,A_11.1)
***
***Refined event:***
* Kappa_rule 
****Rule 'A(b)->' [A(b)->]****#0.0=1
#0.2=3
Apply A(b)->
DEL #0
if pattern 2 is matched 
Modif sites: []
agent #0 might have side effect disconnection on sites {3,1}

Story encoding: 
 Is_Here(A_9)
 Is_Free(A_9.2)
 Remove(A_9)
 Side_effects(A_9.1:*)
 Side_effects(A_9.3:*)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_14[1,2,3])
 Create(B_13[1,2,3])
 Bind(A_14.1,B_13.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_15[1~0,2,3])
 Mod(C_15.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule 'A(b)->' [A(b)->]****#0.0=1
#0.2=3
Apply A(b)->
DEL #0
if pattern 2 is matched 
Modif sites: []
agent #0 might have side effect disconnection on sites {3,1}

Story encoding: 
 Is_Here(A_14)
 Is_Free(A_14.2)
 Remove(A_14)
 Side_effects(A_14.1:*)
 Side_effects(A_14.3:*)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_16[1~0,2,3])
 Mod(C_16.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_18[1,2,3])
 Create(B_17[1,2,3])
 Bind(A_18.1,B_17.1)
***
***Refined event:***
* Kappa_rule 
****Rule 'A(b)->' [A(b)->]****#0.0=1
#0.2=3
Apply A(b)->
DEL #0
if pattern 2 is matched 
Modif sites: []
agent #0 might have side effect disconnection on sites {3,1}

Story encoding: 
 Is_Here(A_0)
 Is_Free(A_0.2)
 Remove(A_0)
 Side_effects(A_0.1:*)
 Side_effects(A_0.3:*)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_19[1~0,2,3])
 Mod(C_19.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_21[1,2,3])
 Create(B_20[1,2,3])
 Bind(A_21.1,B_20.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_23[1,2,3])
 Create(B_22[1,2,3])
 Bind(A_23.1,B_22.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_25[1,2,3])
 Create(B_24[1,2,3])
 Bind(A_25.1,B_24.1)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_26[1~0,2,3])
 Mod(C_26.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule 'A(b)->' [A(b)->]****#0.0=1
#0.2=3
Apply A(b)->
DEL #0
if pattern 2 is matched 
Modif sites: []
agent #0 might have side effect disconnection on sites {3,1}

Story encoding: 
 Is_Here(A_18)
 Is_Free(A_18.2)
 Remove(A_18)
 Side_effects(A_18.1:*)
 Side_effects(A_18.3:*)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_27[1~0,2,3])
 Mod(C_27.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule '->C(a~p)' [->C(a~p)]****Apply ->C(a~p)
ADD C(a~p,b,c) with identifier #0
SET #0.1 to state 0
if pattern 5 is matched 
Modif sites: [0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(C_28[1~0,2,3])
 Mod(C_28.1~0)
***
***Refined event:***
* Kappa_rule 
****Rule 'B(a),C(a~u)->B(a!0),C(a~p!0)' [B(a),C(a~u)->B(a!0),C(a~p!0)]****#0.0=0
#0.1=3
#1.0=0
#1.1=15
Apply B(a),C(a~u)->B(a!0),C(a~p!0)
SET #1.1 to state 0
BND (#1.1,#0.1)
if pattern 0 is matched 
Modif sites: [1->{(1,1),(1,0)},0->{(1,1)}]
CC[0] and CCs {1,0} in the left hand side will merge

Story encoding: 
 Is_Here(B_17)
 Is_Free(B_17.1)
 Is_Here(C_2)
 Has_Internal(C_2.1~1)
 Is_Free(C_2.1)
 Mod(C_2.1~0)
 Bind(B_17.1,C_2.1)
***
***Refined obs***		 * cutting concurrent events
INIT: Agent 2_2
 Create(C_2[3,2,1~1])
 Free(C_2.3)
 Free(C_2.2)
 Bind(C_2.1,C_3.1)

INIT: Agent 2_3
 Create(C_3[3,2,1~0])
 Free(C_3.3)
 Free(C_3.2)
 Bind(C_3.1,C_2.1)

***Refined event:***
* Kappa_rule 
****Rule 'C(a!_)->C(a)' [C(a!_)->C(a)]****#0.0=0
#0.1=3
Apply C(a!_)->C(a)
FREE* #0.1
if pattern 3 is matched 
Modif sites: [0->{(1,1)}]
agent #0 might have side effect disconnection on sites {1}

Story encoding: 
 Is_Here(C_3)
 Is_Bound(C_3.1)
 Free(C_3.1)
 Side_effects(C_3.1:!_)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_18[1,2,3])
 Create(B_17[1,2,3])
 Bind(A_18.1,B_17.1)
***
***Refined event:***
* Kappa_rule 
****Rule 'B(a),C(a~u)->B(a!0),C(a~p!0)' [B(a),C(a~u)->B(a!0),C(a~p!0)]****#0.0=0
#0.1=3
#1.0=0
#1.1=15
Apply B(a),C(a~u)->B(a!0),C(a~p!0)
SET #1.1 to state 0
BND (#1.1,#0.1)
if pattern 0 is matched 
Modif sites: [1->{(1,1),(1,0)},0->{(1,1)}]
CC[0] and CCs {1,0} in the left hand side will merge

Story encoding: 
 Is_Here(B_17)
 Is_Free(B_17.1)
 Is_Here(C_2)
 Has_Internal(C_2.1~1)
 Is_Free(C_2.1)
 Mod(C_2.1~0)
 Bind(B_17.1,C_2.1)
***
***Refined obs***		 * detecting pseudo inverse events
INIT: Agent 2_2
 Create(C_2[3,2,1~1])
 Free(C_2.3)
 Free(C_2.2)
 Bind(C_2.1,C_3.1)

INIT: Agent 2_3
 Create(C_3[3,2,1~0])
 Free(C_3.3)
 Free(C_3.2)
 Bind(C_3.1,C_2.1)

***Refined event:***
* Kappa_rule 
****Rule 'C(a!_)->C(a)' [C(a!_)->C(a)]****#0.0=0
#0.1=3
Apply C(a!_)->C(a)
FREE* #0.1
if pattern 3 is matched 
Modif sites: [0->{(1,1)}]
agent #0 might have side effect disconnection on sites {1}

Story encoding: 
 Is_Here(C_3)
 Is_Bound(C_3.1)
 Free(C_3.1)
 Side_effects(C_3.1:!_)
***
***Refined event:***
* Kappa_rule 
****Rule '->A(a!0,b),B(a!0)' [->A(a!0,b),B(a!0)]****Apply ->A(a!0,b),B(a!0)
ADD A(a,b,c) with identifier #0
ADD B(a,b,c) with identifier #1
BND (#0.1,#1.1)
if pattern 4 is matched 
Modif sites: [1->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)},0->{(3,1),(3,0),(2,1),(2,0),(1,1),(1,0),(0,1),(0,0)}]

Story encoding: 
 Create(A_18[1,2,3])
 Create(B_17[1,2,3])
 Bind(A_18.1,B_17.1)
***
***Refined event:***
* Kappa_rule 
****Rule 'B(a),C(a~u)->B(a!0),C(a~p!0)' [B(a),C(a~u)->B(a!0),C(a~p!0)]****#0.0=0
#0.1=3
#1.0=0
#1.1=15
Apply B(a),C(a~u)->B(a!0),C(a~p!0)
SET #1.1 to state 0
BND (#1.1,#0.1)
if pattern 0 is matched 
Modif sites: [1->{(1,1),(1,0)},0->{(1,1)}]
CC[0] and CCs {1,0} in the left hand side will merge

Story encoding: 
 Is_Here(B_17)
 Is_Free(B_17.1)
 Is_Here(C_2)
 Has_Internal(C_2.1~1)
 Is_Free(C_2.1)
 Mod(C_2.1~0)
 Bind(B_17.1,C_2.1)
***
***Refined obs***		 * blackboard generation
		 * pretty printing the grid
**
BLACKBOARD
**
18 wires, 6 events
*wires:*
0*wires 0: test:/eid:-1/action: Undefined ?(test:Undefined/eid:0/action:Present)  ?(test:Present/eid:4/action:)  ?(test:Present/eid:5/action:)  test:/eid:-1/action:  
1*wires 1: test:/eid:-1/action: Undefined ?(test:Undefined/eid:0/action:Free)  test:/eid:-1/action:  
2*wires 2: test:/eid:-1/action: Undefined ?(test:Undefined/eid:0/action:Free)  test:/eid:-1/action:  
3*wires 3: test:/eid:-1/action: Undefined ?(test:Undefined/eid:0/action:Bound(5,3(2)@1))  ?(test:Bound(5,3(2)@1)/eid:2/action:Free)  ?(test:Free/eid:4/action:Bound(15,17(1)@1))  ?(test:Bound(15,17(1)@1)/eid:5/action:)  test:/eid:-1/action:  
4*wires 4: test:/eid:-1/action: Undefined ?(test:Undefined/eid:0/action:1)  ?(test:1/eid:4/action:0)  ?(test:0/eid:5/action:)  test:/eid:-1/action:  
5*wires 5: test:/eid:-1/action: Undefined ?(test:Undefined/eid:1/action:Bound(3,2(2)@1))  ?(test:Bound(3,2(2)@1)/eid:2/action:Free)  test:/eid:-1/action:  
6*wires 6: test:/eid:-1/action: Undefined ?(test:Undefined/eid:1/action:Present)  ?(test:Present/eid:2/action:)  test:/eid:-1/action:  
7*wires 7: test:/eid:-1/action: Undefined ?(test:Undefined/eid:1/action:Free)  test:/eid:-1/action:  
8*wires 8: test:/eid:-1/action: Undefined ?(test:Undefined/eid:1/action:Free)  test:/eid:-1/action:  
9*wires 9: test:/eid:-1/action: Undefined ?(test:Undefined/eid:1/action:0)  test:/eid:-1/action:  
10*wires 10: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Present)  test:/eid:-1/action:  
11*wires 11: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Bound(15,17(1)@1))  test:/eid:-1/action:  
12*wires 12: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Free)  test:/eid:-1/action:  
13*wires 13: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Free)  test:/eid:-1/action:  
14*wires 14: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Present)  ?(test:Present/eid:4/action:)  ?(test:Present/eid:5/action:)  test:/eid:-1/action:  
15*wires 15: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Bound(11,18(0)@1))  ?(test:Free/eid:4/action:Bound(3,2(2)@1))  ?(test:Bound(3,2(2)@1)/eid:5/action:)  test:/eid:-1/action:  
16*wires 16: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Free)  test:/eid:-1/action:  
17*wires 17: test:/eid:-1/action: Undefined ?(test:Undefined/eid:3/action:Free)  test:/eid:-1/action:  
*stacks*

*selected_events*
*unsolved_events*
 6
*weight of predicate_id*
 0:3
 1:1
 2:1
 3:4
 4:3
 5:2
 6:2
 7:1
 8:1
 9:1
 10:1
 11:1
 12:1
 13:1
 14:3
 15:3
 16:1
 17:1
 18:0
 19:0
 20:0
 21:0
 22:0
 23:0
 24:0
 25:0
 26:0
 27:0
 28:0
 29:0
 30:0
 31:0
*weight of predicate_id_by_level*
 Level:0
 0:3
 1:1
 2:1
 3:4
 4:3
 5:2
 6:2
 7:1
 8:1
 9:1
 10:1
 11:1
 12:1
 13:1
 14:3
 15:3
 16:1
 17:1
 18:0
 19:0
 20:0
 21:0
 22:0
 23:0
 24:0
 25:0
 26:0
 27:0
 28:0
 29:0
 30:0
 31:0
 Level:1
**
	 - Causal flow computation (1)

____________________________________________________________
		 * causal compression 1
############################################################

	 - Weak flow compression (1)

____________________________________________________________
		 * result
############################################################


+ Pretty printing 1 flow

+ Pretty printing 0 weakly compressed flow

Simulation ended (eff.: 0.956522, detail below)
	Valid embedding but no longer unary when required: 0.000000
	Valid embedding but not binary when required: 0.000000
	Clashing instance: 0.000000
	Lazy negative update: 1.000000
	Lazy negative update of non local instances: 0.000000
	Perturbation interrupting time advance: 0.000000
Fail_to_compressmake[1]: quittant le répertoire « /crypted/Gits/KaSim/models/cflows/side-effects2 »
